on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: Run tests

jobs:
  test:
    name: ${{ matrix.os }}, ${{ matrix.python-version }}, ${{ matrix.env }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.9", "3.10", "3.11"]
        dev: [false]
        env:
          - ci/environment.yml
        include:
          - env: ci/environment-dev.yml
            os: ubuntu-latest
            python-version: "3.11"
            dev: true
          - env: ci/environment-dev.yml
            os: macos-latest
            python-version: "3.11"
            dev: true
          - env: ci/environment-dev.yml
            os: windows-latest
            python-version: "3.11"
            dev: true

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: spherely-dev
          use-mamba: true
          python-version: ${{ matrix.python-version }}
          environment-file: ${{ matrix.env }}

      - name: Get Date
        id: get-date
        shell: bash -l {0}
        # cache will last one day
        run: echo "::set-output name=today::$(/bin/date -u '+%Y%m%d')"

      - name: Cache environment
        uses: actions/cache@v2
        with:
          path: ${{ env.CONDA }}/envs
          key: ${{ runner.os }}-{{ matrix.python-version }}-conda-${{ hashFiles( matrix.env ) }}-${{ steps.get-date.outputs.today }}-${{ env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if ci/environment.yml has not changed
          CACHE_NUMBER: 0
        id: conda-cache

      - name: Update environment
        run: mamba env update -n spherely-dev -f ${{ matrix.env }}
        if: steps.conda-cache.outputs.cache-hit != 'true'

      - name: Conda info
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Fetch s2geography
        uses: actions/checkout@v3
        with:
          repository: paleolimbot/s2geography
          ref: master
          path: deps/s2geography
          fetch-depth: 0
        if: |
          matrix.dev == true &&
          steps.conda-cache.outputs.cache-hit != 'true'

      - name: Configure, build & install s2geography (unix)
        shell: bash -l {0}
        run: |
          cd deps/s2geography
          cmake -S . -B build \
            -DCMAKE_CXX_STANDARD=17 \
            -DCMAKE_BUILD_TYPE=Release \
            -DS2GEOGRAPHY_S2_SOURCE=CONDA \
            -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX
          cmake --build build
          cmake --install build
        if: |
          matrix.dev == true &&
          (steps.conda-cache.outputs.cache-hit != 'true' &&
          (runner.os == 'Linux' || runner.os == 'macOS'))

      - name: Configure, build & install s2geography (win)
        shell: bash -l {0}
        run: |
          cd deps/s2geography
          cmake -S . -B build \
            -DCMAKE_CXX_STANDARD=17 \
            -DS2GEOGRAPHY_S2_SOURCE=CONDA \
            -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX/Library \
            -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=TRUE
          cmake --build build --config Release
          cmake --install build
        if: |
          matrix.dev == true &&
          (steps.conda-cache.outputs.cache-hit != 'true' &&
          runner.os == 'Windows')

      - name: Build and install spherely
        shell: bash -l {0}
        run: python -m pip install . -v --no-build-isolation

      - name: Run tests
        shell: bash -l {0}
        run: |
          pytest . -vv
